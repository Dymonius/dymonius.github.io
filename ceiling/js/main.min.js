function initMap(){var e=document.querySelector(".map"),t={zoom:17,center:{lat:50.450122,lng:30.524157},zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.LEFT_BOTTOM},streetViewControlOptions:{position:google.maps.ControlPosition.LEFT_CENTER},styles:[{elementType:"geometry",stylers:[{color:"#ebe3cd"}]},{elementType:"labels.text.fill",stylers:[{color:"#523735"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f1e6"}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#c9b2a6"}]},{featureType:"administrative.land_parcel",elementType:"geometry.stroke",stylers:[{color:"#dcd2be"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#ae9e90"}]},{featureType:"landscape.natural",elementType:"geometry",stylers:[{color:"#dfd2ae"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#dfd2ae"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#93817c"}]},{featureType:"poi.park",elementType:"geometry.fill",stylers:[{color:"#a5b076"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#447530"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#f5f1e6"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#fdfcf8"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#f8c967"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#e9bc62"}]},{featureType:"road.highway.controlled_access",elementType:"geometry",stylers:[{color:"#e98d58"}]},{featureType:"road.highway.controlled_access",elementType:"geometry.stroke",stylers:[{color:"#db8555"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#806b63"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#dfd2ae"}]},{featureType:"transit.line",elementType:"labels.text.fill",stylers:[{color:"#8f7d77"}]},{featureType:"transit.line",elementType:"labels.text.stroke",stylers:[{color:"#ebe3cd"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#dfd2ae"}]},{featureType:"water",elementType:"geometry.fill",stylers:[{color:"#b9d3c2"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#92998d"}]}]},o=new google.maps.Map(e,t),l=new google.maps.Marker({position:{lat:50.450122,lng:30.524157},map:o});new google.maps.InfoWindow({content:'<div class="marker">Отличные потолки</div>'}).open(o,l)}window.onload=function(){!function(){function e(){s.innerHTML=t.value*a+o.value*i+" грн."}var t=document.querySelector(".square"),o=document.querySelector(".quantity"),l=document.querySelector(".radio1"),r=document.querySelector(".radio2"),n=document.querySelector(".radio3"),s=document.querySelector(".form__price"),i=70,a=100;s.innerHTML=t.value*a+o.value*i+" грн.",t.addEventListener("input",e),o.addEventListener("input",e),l.addEventListener("click",function(){a=100,e()}),r.addEventListener("click",function(){a=150,e()}),n.addEventListener("click",function(){a=200,e()})}(),function(){var e=document.querySelector(".menu"),t=!1,o=e.offsetTop+e.offsetHeight;window.onscroll=function(){if(window.innerWidth>1e3){var l=o-window.pageYOffset,r=window.pageYOffset;l<=0&&!t?(e.classList.add("menu--fixed"),t=!0):t&&r<=o&&(e.classList.remove("menu--fixed"),t=!1)}}}(),function(){"use strict";var e,t=document.querySelector(".up_down_btn");window.addEventListener("scroll",function(){var o=window.pageYOffset,l=document.documentElement.clientHeight;o>l?(t.classList.add("up_down_btn-show"),t.setAttribute("title","Наверх"),e=!1):o<=l&&(t.classList.remove("up_down_btn-show"),t.setAttribute("title","Наверх"),e=!1)}),t.addEventListener("click",function(){t.classList.add("up_down_btn-disabled"),e?e&&function e(){Math.ceil(window.pageYOffset+document.documentElement.clientHeight)!=document.documentElement.scrollHeight?(window.scrollBy(0,80),setTimeout(e,0)):t.classList.remove("up_down_btn-disabled")}():function e(){0!==window.pageYOffset?(window.scrollBy(0,-40),setTimeout(e,0)):t.classList.remove("up_down_btn-disabled")}()})}(),function(){var e=document.querySelector(".hamburger"),t=document.querySelector(".menu");e.addEventListener("click",function(){if(t.classList.toggle("menu--open"),e.classList.toggle("hamburger--closed"),t.classList.contains("menu--open"))for(var o=document.querySelectorAll(".menu__items-link"),l=0;l<o.length;l++)o[l].addEventListener("click",function(){t.classList.remove("menu--open"),e.classList.remove("hamburger--closed")})})}(),$(".slider-schemes").slick({dots:!0,infinite:!0,slidesToShow:2,slidesToScroll:2,responsive:[{breakpoint:937,settings:{slidesToShow:1,slidesToScroll:1,infinite:!0,dots:!0}}]}),$(".photo-gallery").slick({centerPadding:"10%",centerMode:!0,slidesToShow:3,slidesToScroll:1,autoplay:!0,autoplaySpeed:2e3,responsive:[{breakpoint:1300,settings:{centerMode:!0,centerPadding:"10%",slidesToShow:2}},{breakpoint:1e3,settings:{centerMode:!0,centerPadding:"22%",slidesToShow:1}},{breakpoint:700,settings:{centerMode:!0,centerPadding:"10%",slidesToShow:1},breakpoint:500,settings:{arrows:!1,centerMode:!0,centerPadding:"10%",slidesToShow:1}}]}),$(".comments__slider").slick({arrows:!1,dots:!0})},$(function(){$('a[data-target^="anchor"]').bind("click.smoothscroll",function(){var e=$(this).attr("href"),t=$(e).offset().top;$("body, html").animate({scrollTop:t-85},700)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
